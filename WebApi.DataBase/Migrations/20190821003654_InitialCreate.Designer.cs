// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApi.DataBase.Context;

namespace WebApi.DataBase.Migrations
{
    [DbContext(typeof(WebApiContext))]
    [Migration("20190821003654_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("WebApi.DataBase.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("IdentityPeople");

                    b.Property<string>("Number");

                    b.HasKey("Id");

                    b.HasIndex("IdentityPeople");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("WebApi.DataBase.Models.AuditsUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Activity");

                    b.Property<DateTime>("CreationDate");

                    b.Property<int>("IdUser");

                    b.Property<string>("IpAccess");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("AuditsUser");
                });

            modelBuilder.Entity("WebApi.DataBase.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("WebApi.DataBase.Models.LoginToken", b =>
                {
                    b.Property<string>("Token")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<int>("Iduser");

                    b.Property<string>("IpAccess");

                    b.HasKey("Token");

                    b.HasIndex("Iduser");

                    b.ToTable("LoginToken");
                });

            modelBuilder.Entity("WebApi.DataBase.Models.Person", b =>
                {
                    b.Property<string>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("DateBirth");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("SecondName");

                    b.HasKey("Identity");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("WebApi.DataBase.Models.Privilege", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("IdRole");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("IdRole");

                    b.ToTable("Privilege");
                });

            modelBuilder.Entity("WebApi.DataBase.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("IdUser");

                    b.Property<string>("RoleName");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("WebApi.DataBase.Models.Telephone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("IdentityPeople");

                    b.Property<string>("Number");

                    b.HasKey("Id");

                    b.HasIndex("IdentityPeople");

                    b.ToTable("Telephone");
                });

            modelBuilder.Entity("WebApi.DataBase.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("IdentityPeople");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("IdentityPeople");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WebApi.DataBase.Models.Address", b =>
                {
                    b.HasOne("WebApi.DataBase.Models.Person", "Person")
                        .WithMany("Adresses")
                        .HasForeignKey("IdentityPeople");
                });

            modelBuilder.Entity("WebApi.DataBase.Models.AuditsUser", b =>
                {
                    b.HasOne("WebApi.DataBase.Models.User", "User")
                        .WithMany("Auditories_user")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApi.DataBase.Models.LoginToken", b =>
                {
                    b.HasOne("WebApi.DataBase.Models.User", "User")
                        .WithMany("LogginToken")
                        .HasForeignKey("Iduser")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApi.DataBase.Models.Privilege", b =>
                {
                    b.HasOne("WebApi.DataBase.Models.Role", "Role")
                        .WithMany("Privileges")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApi.DataBase.Models.Role", b =>
                {
                    b.HasOne("WebApi.DataBase.Models.User", "User")
                        .WithMany("Rols")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApi.DataBase.Models.Telephone", b =>
                {
                    b.HasOne("WebApi.DataBase.Models.Person", "Person")
                        .WithMany("Telephones")
                        .HasForeignKey("IdentityPeople");
                });

            modelBuilder.Entity("WebApi.DataBase.Models.User", b =>
                {
                    b.HasOne("WebApi.DataBase.Models.Person", "People")
                        .WithMany()
                        .HasForeignKey("IdentityPeople");
                });
#pragma warning restore 612, 618
        }
    }
}
